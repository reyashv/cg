#include <windows.h>
#include <iostream>
#include <math.h>
#include <GL/glut.h>

using namespace std;
int arrX[100], arrY[100];
int ok=0;
int n=0;

void init(){
    glClearColor(0,0,0,1);
    glMatrixMode(GL_PROJECTION);
    glLoadIdentity();
    gluOrtho2D(0,640,0,480);
}

void draw_polygon()
{
    glColor3d(0,1,1);
    glBegin(GL_LINES);
    for(int i=0;i<n;i++){
        int k=(i+1)%n;
        glVertex2f(arrX[i],arrY[i]);
        glVertex2f(arrX[k],arrY[k]);
    }
    glEnd();
    glFlush();
}

void boundaryfill(int x, int y, float* fillColor, float* bc){
    float color[3];
    glReadPixels(x,y,1,1,GL_RGB,GL_FLOAT,color);
    if((color[0]!=bc[0] || color[1]!=bc[1] || color[2]!=bc[2])&&(
     color[0]!=fillColor[0] || color[1]!=fillColor[1] || color[2]!=fillColor[2]))
     {
        glColor3f(fillColor[0],fillColor[1],fillColor[2]);
        glBegin(GL_POINTS);
            glVertex2i(x,y);
        glEnd();
        glFlush();
        boundaryfill(x+1,y,fillColor,bc);
        boundaryfill(x-1,y,fillColor,bc);
        boundaryfill(x,y+1,fillColor,bc);
        boundaryfill(x,y-1,fillColor,bc);
    }
}

void mouse(int button, int state, int x, int y){
    if(button==GLUT_LEFT_BUTTON && state==GLUT_DOWN)
    {
        arrX[n]=x;
        arrY[n]=480-y;
        n++;
    }

    if(ok==0 && button==GLUT_RIGHT_BUTTON && state==GLUT_DOWN)
    {
        draw_polygon();
        n=0;
        ok=1;
    }

    else if(ok==1 && button==GLUT_RIGHT_BUTTON && state==GLUT_DOWN)
    {
        float bCol[] = {0,1,1};
        float color[] = {0,0,1};
        boundaryfill(x,480-y,color,bCol);
        n=0;
        ok=0;
    }
}

void display(){
    glClear(GL_COLOR_BUFFER_BIT);
    glFlush();
}

int main(int argc, char** argv){
    glutInit(&argc, argv);
    glutInitWindowSize(640,480);
    glutInitWindowPosition(10,10);
    glutInitDisplayMode(GLUT_SINGLE|GLUT_RGB);
    glutCreateWindow("Boundary Fill");
    init();
    glutDisplayFunc(display);
    glutMouseFunc(mouse);

    glutMainLoop();
    return 0;
}
